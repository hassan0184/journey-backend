# Generated by Django 4.2.9 on 2024-02-19 11:06

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("common", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="ChallengeRequest",
            fields=[
                (
                    "basemodel_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="common.basemodel",
                    ),
                ),
                ("challenge_info", models.CharField(max_length=150)),
                ("email", models.EmailField(blank=True, max_length=254, null=True)),
                ("is_attended", models.BooleanField(default=False)),
            ],
            options={
                "verbose_name": "Challenge Request",
                "verbose_name_plural": "Challenge Requests",
            },
            bases=("common.basemodel",),
        ),
        migrations.CreateModel(
            name="Challenges",
            fields=[
                (
                    "basemodel_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="common.basemodel",
                    ),
                ),
                ("label", models.CharField(max_length=50, unique=True)),
                ("is_active", models.BooleanField(default=False)),
            ],
            options={
                "verbose_name": "Challenges",
                "verbose_name_plural": "Challenges",
            },
            bases=("common.basemodel",),
        ),
        migrations.CreateModel(
            name="HeroTypes",
            fields=[
                (
                    "basemodel_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="common.basemodel",
                    ),
                ),
                ("label", models.CharField(max_length=30, unique=True)),
                ("is_active", models.BooleanField(default=False)),
            ],
            options={
                "verbose_name": "Hero Types",
                "verbose_name_plural": "Hero Types",
            },
            bases=("common.basemodel",),
        ),
        migrations.CreateModel(
            name="Obstacles",
            fields=[
                (
                    "basemodel_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="common.basemodel",
                    ),
                ),
                ("label", models.CharField(max_length=100)),
                ("name", models.CharField(max_length=300)),
                ("description", models.CharField(max_length=300)),
                (
                    "threat_type",
                    models.CharField(choices=[("symptom", "Symptom")], max_length=20),
                ),
                (
                    "threat_level",
                    models.IntegerField(
                        choices=[(1, "1"), (2, "2"), (3, "3"), (4, "4"), (5, "5")]
                    ),
                ),
                ("image", models.ImageField(upload_to="obstacles/")),
                ("is_active", models.BooleanField(default=True)),
                ("is_custom", models.BooleanField(default=False)),
            ],
            options={
                "verbose_name": "Obstacles",
                "verbose_name_plural": "Obstacles",
            },
            bases=("common.basemodel",),
        ),
        migrations.CreateModel(
            name="PowerUps",
            fields=[
                (
                    "basemodel_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="common.basemodel",
                    ),
                ),
                ("label", models.CharField(max_length=100)),
                ("name", models.CharField(max_length=300)),
                ("description", models.CharField(max_length=300)),
                (
                    "powerup_type",
                    models.CharField(choices=[("tool", "Tool")], max_length=20),
                ),
                ("image", models.ImageField(upload_to="powerups/")),
                ("is_active", models.BooleanField(default=True)),
                ("is_custom", models.BooleanField(default=False)),
            ],
            options={
                "verbose_name": "Power-Ups",
                "verbose_name_plural": "Power-Ups",
            },
            bases=("common.basemodel",),
        ),
        migrations.CreateModel(
            name="QuestRequests",
            fields=[
                (
                    "basemodel_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="common.basemodel",
                    ),
                ),
                ("quest_info", models.CharField(max_length=500)),
                ("is_attended", models.BooleanField(default=False)),
            ],
            options={
                "verbose_name": "Quest RequestS",
                "verbose_name_plural": "Quest Requests",
            },
            bases=("common.basemodel",),
        ),
        migrations.CreateModel(
            name="Quests",
            fields=[
                (
                    "basemodel_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="common.basemodel",
                    ),
                ),
                ("label", models.CharField(max_length=100)),
                ("objective", models.CharField(max_length=300)),
                ("reward", models.CharField(max_length=300)),
                ("image", models.ImageField(upload_to="quests/")),
                ("is_active", models.BooleanField(default=True)),
                ("is_custom", models.BooleanField(default=False)),
            ],
            options={
                "verbose_name": "Quests",
                "verbose_name_plural": "Quests",
            },
            bases=("common.basemodel",),
        ),
        migrations.CreateModel(
            name="RecommendationType",
            fields=[
                (
                    "basemodel_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="common.basemodel",
                    ),
                ),
                ("image", models.ImageField(upload_to="recommendations/")),
                ("label", models.CharField(max_length=50, unique=True)),
                ("is_active", models.BooleanField(default=False)),
            ],
            options={
                "verbose_name": "Recommendation Types",
                "verbose_name_plural": "Recommendation Types",
            },
            bases=("common.basemodel",),
        ),
        migrations.CreateModel(
            name="RoleType",
            fields=[
                (
                    "basemodel_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="common.basemodel",
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        blank=True,
                        choices=[("self", "Self"), ("mentor", "Mentor")],
                        null=True,
                    ),
                ),
                ("label", models.CharField(max_length=30, unique=True)),
                ("label_description", models.CharField(max_length=50)),
                ("is_active", models.BooleanField(default=False)),
            ],
            options={
                "verbose_name": "Role Types",
                "verbose_name_plural": "Role Types",
            },
            bases=("common.basemodel",),
        ),
        migrations.CreateModel(
            name="UserChallengeRecommendationType",
            fields=[
                (
                    "basemodel_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="common.basemodel",
                    ),
                ),
            ],
            options={
                "verbose_name": "User Challenge Recommendation Types",
                "verbose_name_plural": "User Challenge Recommendation Types",
            },
            bases=("common.basemodel",),
        ),
        migrations.CreateModel(
            name="UserChallenges",
            fields=[
                (
                    "basemodel_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="common.basemodel",
                    ),
                ),
                ("hero_age", models.IntegerField()),
                (
                    "hero_extra_info",
                    models.CharField(blank=True, max_length=300, null=True),
                ),
                ("is_challenge_achieved", models.BooleanField(default=False)),
                (
                    "hero_challenge",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="hero_challenge",
                        to="journey.challenges",
                    ),
                ),
                (
                    "hero_ethnicity",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="hero_ethnicity",
                        to="common.ethnicity",
                    ),
                ),
                (
                    "hero_gender",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="hero_gender",
                        to="common.gender",
                    ),
                ),
                (
                    "hero_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="hero_challenges",
                        to="journey.herotypes",
                    ),
                ),
                (
                    "role_type",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="role_challenge",
                        to="journey.roletype",
                    ),
                ),
            ],
            options={
                "verbose_name": "User Challenges",
                "verbose_name_plural": "User Challenges",
            },
            bases=("common.basemodel",),
        ),
    ]
