# Generated by Django 4.2.9 on 2024-02-25 14:13

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("common", "0002_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Activity",
            fields=[
                (
                    "basemodel_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="common.basemodel",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "image",
                    models.ImageField(
                        blank=True, null=True, upload_to="discovery/media/activity/"
                    ),
                ),
                ("no_of_participants", models.IntegerField(blank=True, null=True)),
            ],
            options={
                "verbose_name": "Activity",
                "verbose_name_plural": "Activity",
            },
            bases=("common.basemodel",),
        ),
        migrations.CreateModel(
            name="CareerInterests",
            fields=[
                (
                    "basemodel_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="common.basemodel",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "image",
                    models.ImageField(
                        blank=True, null=True, upload_to="discovery/media/career/"
                    ),
                ),
            ],
            options={
                "verbose_name": "Career Interest",
                "verbose_name_plural": "Career Interests",
            },
            bases=("common.basemodel",),
        ),
        migrations.CreateModel(
            name="Characters",
            fields=[
                (
                    "basemodel_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="common.basemodel",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "image",
                    models.ImageField(
                        blank=True, null=True, upload_to="discovery/media/characters/"
                    ),
                ),
                (
                    "source_type",
                    models.CharField(
                        choices=[("native", "Native"), ("mentioned", "Mentioned")],
                        max_length=50,
                        verbose_name="Is this character mentioned in this media or native to this media?",
                    ),
                ),
            ],
            options={
                "verbose_name": "Characters",
                "verbose_name_plural": "Characters",
            },
            bases=("common.basemodel",),
        ),
        migrations.CreateModel(
            name="CharacterTraits",
            fields=[
                (
                    "basemodel_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="common.basemodel",
                    ),
                ),
                ("label", models.CharField(max_length=100)),
            ],
            options={
                "verbose_name": "Character Trait",
                "verbose_name_plural": "Character Traits",
            },
            bases=("common.basemodel",),
        ),
        migrations.CreateModel(
            name="Genres",
            fields=[
                (
                    "basemodel_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="common.basemodel",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "image",
                    models.ImageField(
                        blank=True, null=True, upload_to="discovery/media/genres/"
                    ),
                ),
                (
                    "source_type",
                    models.CharField(
                        choices=[("native", "Native"), ("mentioned", "Mentioned")],
                        max_length=50,
                        verbose_name="Is this genre mentioned in this media or native to this media?",
                    ),
                ),
                (
                    "applicable_formats",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(
                            choices=[
                                ("book", "Book"),
                                ("movie", "Movie"),
                                ("music", "Music"),
                                ("game", "Game"),
                                ("theater", "Theater"),
                                ("artifact", "Artifact"),
                            ],
                            max_length=50,
                        ),
                        size=None,
                    ),
                ),
            ],
            options={
                "verbose_name": "Genres",
                "verbose_name_plural": "Genres",
            },
            bases=("common.basemodel",),
        ),
        migrations.CreateModel(
            name="Items",
            fields=[
                (
                    "basemodel_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="common.basemodel",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "image",
                    models.ImageField(
                        blank=True, null=True, upload_to="discovery/media/items/"
                    ),
                ),
                (
                    "source_type",
                    models.CharField(
                        choices=[("native", "Native"), ("mentioned", "Mentioned")],
                        max_length=50,
                        verbose_name="Is this item mentioned in this media or native to this media?",
                    ),
                ),
            ],
            options={
                "verbose_name": "Items",
                "verbose_name_plural": "Items",
            },
            bases=("common.basemodel",),
        ),
        migrations.CreateModel(
            name="Media",
            fields=[
                (
                    "basemodel_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="common.basemodel",
                    ),
                ),
                (
                    "media_type",
                    models.CharField(
                        choices=[
                            ("book", "Book"),
                            ("movie", "Movie"),
                            ("tv_show", "TV Show"),
                            ("podcast", "PodCast"),
                            ("music", "Musical Piece/Song"),
                            ("game", "Game"),
                            ("theater", "Theatical prodcution"),
                            ("artifact", "Artifact"),
                            ("discovery", "Discovery Item"),
                        ],
                        default="book",
                        max_length=50,
                    ),
                ),
                ("title", models.CharField(max_length=100)),
                ("summary", models.TextField()),
                ("origin", models.IntegerField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=False)),
                ("identifier", models.CharField(blank=True, max_length=13, null=True)),
                ("link", models.URLField(blank=True, null=True)),
                (
                    "cover_image",
                    models.ImageField(
                        blank=True, null=True, upload_to="discovery/media/"
                    ),
                ),
                (
                    "format",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("hardcover", "Hardcover"),
                            ("paperback", "Paperback"),
                            ("ebook", "Ebook"),
                            ("audiobook", "Audiobook"),
                            ("other", "Other"),
                        ],
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "activities",
                    models.ManyToManyField(
                        blank=True,
                        related_name="media_activities",
                        to="discovery.activity",
                    ),
                ),
                (
                    "career_interests",
                    models.ManyToManyField(
                        blank=True,
                        related_name="media_career_interests",
                        to="discovery.careerinterests",
                    ),
                ),
                (
                    "characters",
                    models.ManyToManyField(
                        blank=True,
                        related_name="media_characters",
                        to="discovery.characters",
                    ),
                ),
                (
                    "genres",
                    models.ManyToManyField(
                        blank=True, related_name="media_genres", to="discovery.genres"
                    ),
                ),
                (
                    "items",
                    models.ManyToManyField(
                        blank=True, related_name="media_items", to="discovery.items"
                    ),
                ),
            ],
            options={
                "verbose_name": "Media",
                "verbose_name_plural": "Media",
            },
            bases=("common.basemodel",),
        ),
        migrations.CreateModel(
            name="Places",
            fields=[
                (
                    "basemodel_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="common.basemodel",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "image",
                    models.ImageField(
                        blank=True, null=True, upload_to="discovery/media/places/"
                    ),
                ),
                (
                    "source_type",
                    models.CharField(
                        choices=[("native", "Native"), ("mentioned", "Mentioned")],
                        max_length=50,
                        verbose_name="Is this place mentioned in this media or native to this media?",
                    ),
                ),
                (
                    "place_type",
                    models.CharField(
                        choices=[("real", "Real"), ("fictional", "Fictional")],
                        max_length=100,
                        verbose_name="Is this place real or fictional?",
                    ),
                ),
            ],
            options={
                "verbose_name": "Places",
                "verbose_name_plural": "Places",
            },
            bases=("common.basemodel",),
        ),
        migrations.CreateModel(
            name="PurchaseOppurtunities",
            fields=[
                (
                    "basemodel_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="common.basemodel",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("link", models.URLField(blank=True, null=True)),
                (
                    "image",
                    models.ImageField(
                        blank=True, null=True, upload_to="discovery/media/purchase/"
                    ),
                ),
            ],
            options={
                "verbose_name": "Purchase Oppurtunity",
                "verbose_name_plural": "Purchase Oppurtunities",
            },
            bases=("common.basemodel",),
        ),
        migrations.CreateModel(
            name="Themes",
            fields=[
                (
                    "basemodel_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="common.basemodel",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "image",
                    models.ImageField(
                        blank=True, null=True, upload_to="discovery/media/themes/"
                    ),
                ),
            ],
            options={
                "verbose_name": "Themes",
                "verbose_name_plural": "Themes",
            },
            bases=("common.basemodel",),
        ),
        migrations.CreateModel(
            name="TimePeriods",
            fields=[
                (
                    "basemodel_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="common.basemodel",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "image",
                    models.ImageField(
                        blank=True, null=True, upload_to="discovery/media/time_periods/"
                    ),
                ),
                (
                    "source_type",
                    models.CharField(
                        choices=[("native", "Native"), ("mentioned", "Mentioned")],
                        max_length=50,
                        verbose_name="Is this time period mentioned in this media or native to this media?",
                    ),
                ),
            ],
            options={
                "verbose_name": "Time Periods",
                "verbose_name_plural": "Time Periods",
            },
            bases=("common.basemodel",),
        ),
        migrations.CreateModel(
            name="Topics",
            fields=[
                (
                    "basemodel_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="common.basemodel",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "image",
                    models.ImageField(
                        blank=True, null=True, upload_to="discovery/media/topics/"
                    ),
                ),
                (
                    "source_type",
                    models.CharField(
                        choices=[("native", "Native"), ("mentioned", "Mentioned")],
                        max_length=50,
                        verbose_name="Is this topic mentioned in this media or native to this media?",
                    ),
                ),
            ],
            options={
                "verbose_name": "Topics",
                "verbose_name_plural": "Topics",
            },
            bases=("common.basemodel",),
        ),
        migrations.CreateModel(
            name="MediaCredits",
            fields=[
                (
                    "basemodel_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="common.basemodel",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("author", "Author"),
                            ("director", "Director"),
                            ("creator", "Creator"),
                            ("composer", "Composer or Perfromer"),
                            ("play_wright", "PlayWright"),
                            ("developer", "Developer"),
                            ("host", "Host"),
                        ],
                        max_length=100,
                    ),
                ),
                (
                    "discovery_media",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="media_credits",
                        to="discovery.media",
                    ),
                ),
            ],
            options={
                "verbose_name": "Media Credits",
                "verbose_name_plural": "Media Credits",
            },
            bases=("common.basemodel",),
        ),
        migrations.AddField(
            model_name="media",
            name="places",
            field=models.ManyToManyField(
                blank=True, related_name="media_places", to="discovery.places"
            ),
        ),
        migrations.AddField(
            model_name="media",
            name="purchase_oppurtunities",
            field=models.ManyToManyField(
                blank=True,
                related_name="media_purchase_oppurtunities",
                to="discovery.purchaseoppurtunities",
            ),
        ),
        migrations.AddField(
            model_name="media",
            name="related_media",
            field=models.ManyToManyField(
                blank=True, related_name="related_media", to="discovery.media"
            ),
        ),
        migrations.AddField(
            model_name="media",
            name="target_audience",
            field=models.ManyToManyField(
                blank=True, related_name="media_target_audience", to="common.agegroup"
            ),
        ),
        migrations.AddField(
            model_name="media",
            name="themes",
            field=models.ManyToManyField(
                blank=True, related_name="media_themes", to="discovery.themes"
            ),
        ),
        migrations.AddField(
            model_name="media",
            name="time_periods",
            field=models.ManyToManyField(
                blank=True,
                related_name="media_time_periods",
                to="discovery.timeperiods",
            ),
        ),
        migrations.AddField(
            model_name="media",
            name="topics",
            field=models.ManyToManyField(
                blank=True, related_name="media_topics", to="discovery.topics"
            ),
        ),
        migrations.AddField(
            model_name="characters",
            name="traits",
            field=models.ManyToManyField(
                blank=True,
                related_name="media_characters",
                to="discovery.charactertraits",
            ),
        ),
        migrations.AddField(
            model_name="activity",
            name="location",
            field=models.ManyToManyField(
                blank=True, related_name="activity_location", to="discovery.places"
            ),
        ),
    ]
